const p=function(){const r=typeof document<"u"&&document.createElement("link").relList;return r&&r.supports&&r.supports("modulepreload")?"modulepreload":"preload"}(),f=function(c){return"/"+c},a={},E=function(r,l,h){let i=Promise.resolve();if(l&&l.length>0){document.getElementsByTagName("link");const o=document.querySelector("meta[property=csp-nonce]"),n=o?.nonce||o?.getAttribute("nonce");i=Promise.all(l.map(e=>{if(e=f(e),e in a)return;a[e]=!0;const s=e.endsWith(".css"),u=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${e}"]${u}`))return;const t=document.createElement("link");if(t.rel=s?"stylesheet":p,s||(t.as="script",t.crossOrigin=""),t.href=e,n&&t.setAttribute("nonce",n),document.head.appendChild(t),s)return new Promise((d,m)=>{t.addEventListener("load",d),t.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${e}`)))})}))}return i.then(()=>r()).catch(o=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=o,window.dispatchEvent(n),!n.defaultPrevented)throw o})};export{E as _};
